/*
 * Copyright (c) 2023, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
import org.apache.tools.ant.taskdefs.condition.Os

version stripBallerinaExtensionVersion("${project.version}")

// buildscript {
//     repositories {
//         maven {
//             url = 'https://maven.pkg.github.com/ballerina-platform/plugin-gradle'
//             credentials {
//                 username System.getenv("packageUser")
//                 password System.getenv("packagePAT")
//             }
//         }
//     }
//     dependencies {
//         classpath "io.ballerina:plugin-gradle:${project.ballerinaGradlePluginVersion}"
//     }
// }


description = 'Ballerina - EDI tools package'

def packageName = "editoolspackage"
def packageOrg = "ballerina"
def tomlVersion = stripBallerinaExtensionVersion("${project.version}")
def ballerinaTomlFilePlaceHolder = new File("${project.rootDir}/build-config/resources/package/Ballerina.toml")
def balToolTomlFilePlaceHolder = new File("${project.rootDir}/build-config/resources/package/BalTool.toml")
def ballerinaTomlFile = new File("$project.projectDir/Ballerina.toml")
def balToolTomlFile = new File("$project.projectDir/BalTool.toml")

// apply plugin: 'io.ballerina.plugin'

// ballerina {
//     packageOrganization = packageOrg
//     module = packageName
//     langVersion = ballerinaLangVersion
//     testCoverageParam = "--code-coverage --coverage-format=xml --includes=io.ballerina.stdlib.editoolspackage.*:ballerina.editoolspackage*"
//     platform = "any"
// }

task updateTomlFiles {
    doLast {
        def newConfig = ballerinaTomlFilePlaceHolder.text.replace("@project.version@", project.version)
        newConfig = newConfig.replace("@toml.version@", tomlVersion)
        ballerinaTomlFile.text = newConfig

        def newToolConfig = balToolTomlFilePlaceHolder.text.replace("@project.version@", project.version)
        newToolConfig = newToolConfig.replace("@toml.version@", tomlVersion)
        balToolTomlFile.text = newToolConfig
    }
}

task commitTomlFiles {
    doLast {
        project.exec {
            ignoreExitValue true
            if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                commandLine 'cmd', '/c', "git commit -m \"[Automated] Update the native jar versions\" Ballerina.toml Dependencies.toml"
            } else {
                commandLine 'sh', '-c', "git commit -m '[Automated] Update the native jar versions' Ballerina.toml Dependencies.toml"
            }
        }
    }
}

// publishing {
//     publications {
//         maven(MavenPublication) {
//             artifact source: createArtifactZip, extension: 'zip'
//         }
//     }

//     repositories {
//         maven {
//             name = "GitHubPackages"
//             url = uri("https://maven.pkg.github.com/ballerina-platform/module-${packageOrg}-${packageName}")
//             credentials {
//                 username = System.getenv("publishUser")
//                 password = System.getenv("publishPAT")
//             }
//         }
//     }
// }

task deleteOldEdiCliJars(type: Delete) {
    delete fileTree(dir: 'resources').matching {
        include 'edi-cli-*.jar'
    }
}

task copyEdiCliJar {
    doLast {
        if (!file("resources").exists()) {
            file("resources").mkdir()
        }
        copy {
            from "../edi-cli/build/libs/edi-cli-${version}.jar"
            into "resources"
            include "*.jar"
        }
    }
}

task build {
    dependsOn copyEdiCliJar
}

task prepare {
    dependsOn updateTomlFiles
}

// evaluationDependsOn(':edi-cli')
// build.dependsOn copyEdiCliJar
copyEdiCliJar.dependsOn deleteOldEdiCliJars
copyEdiCliJar.dependsOn ":edi-cli:build"

// updateTomlFiles.dependsOn copyStdlibs

// build.dependsOn "generatePomFileForMavenPublication"
// publishToMavenLocal.dependsOn build
// publish.dependsOn build